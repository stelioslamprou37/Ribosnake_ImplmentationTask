# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.

from snakemake.utils import min_version


min_version("6.10.0")


configfile: "config/config.yaml"


pepfile: config["pepfile"]


report: "report/workflow.rst"


include: "rules/common.smk"
include: "rules/preprocessing.smk"
include: "rules/filtering.smk"
include: "rules/qualitycontroll.smk"
include: "rules/classification.smk"
include: "rules/chimera_checking.smk"
include: "rules/statistic_analysis.smk"
include: "rules/bowtie.smk"


if config["include-data-prep"]:

    include: "rules/preparedata.smk"


if config["reduced-analysis"]:

    include: "rules/reduced_analysis.smk"


if config["reduced-analysis"] == False and config["DADA2"] == False:

    include: "rules/outputs_vsearch.smk"
    include: "rules/visualisation.smk"


if config["reduced-analysis"] == False and config["DADA2"] == True:

    include: "rules/outputs_DADA2.smk"
    include: "rules/visualisation.smk"


if config["longitudinal"]:

    include: "rules/longitudinal.smk"


if config["database"]["Silva"]:

    include: "rules/get_SILVA_DB.smk"


if config["database"]["Greengenes"]:

    include: "rules/get_Greengenes_DB.smk"


if config["database"]["NCBI"]:

    include: "rules/get_NCBI_DB.smk"


rule all:
    input:
        expand(
            "results/{date}/16S-report.tar.gz",
            date=get_date(),
        ),
    output:
        touch(
            expand(
                "results/archive-indicator/{date}.archived",
                date=get_date(),
            ),
        ),
